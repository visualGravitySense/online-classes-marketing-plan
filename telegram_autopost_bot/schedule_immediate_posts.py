#!/usr/bin/env python3
"""
–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã —Å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π
"""

import requests
from datetime import datetime, timedelta
import time

def schedule_immediate_posts():
    """–ü–ª–∞–Ω–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã —Å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π"""
    
    print("üöÄ –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–ï –ü–û–°–¢–û–í –í–û –í–°–ï –ö–ê–ù–ê–õ–´")
    print("=" * 60)
    
    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤
    channels = [
        {"id": "@gr de", "title": "–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∏–∑–∞–π–Ω–µ—Ä—ã", "audience": "Freelancers"},
        {"id": "@ui de", "title": "UX/UI –¥–∏–∑–∞–π–Ω–µ—Ä—ã", "audience": "Juniors"},
        {"id": "@digo_online_schools", "title": "Product Design & ML", "audience": "Developers"},
        {"id": "@designer_lfe", "title": "–ñ–∏–∑–Ω—å –î–∏–∑–∞–π–Ω–µ—Ä–∞", "audience": "Designers"}
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å–µ—Ä–≤–µ—Ä
    try:
        response = requests.get("http://localhost:8000/")
        if response.status_code == 200:
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            return
    except Exception as e:
        print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω: {e}")
        return
    
    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã –≤ –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª
    for i, channel in enumerate(channels, 1):
        print(f"\nüì¢ [{i}/{len(channels)}] –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –≤ {channel['id']} ({channel['title']})...")
        
        # –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ - —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
        publish_time = datetime.now() + timedelta(minutes=2)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        content = f"üéØ –ü–õ–ê–ù–ò–†–û–í–ê–ù–ù–´–ô –ü–û–°–¢ –î–õ–Ø {channel['audience'].upper()}\n\n"
        content += f"üìÖ –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {publish_time.strftime('%H:%M')}\n"
        content += f"üì¢ –ö–∞–Ω–∞–ª: {channel['title']}\n\n"
        content += f"üí° –≠—Ç–æ —Ç–µ—Å—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏: {channel['audience']}\n"
        content += "‚úÖ –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ—Ç –ø–æ—Å—Ç - –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç!\n\n"
        content += "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç —á–µ—Ä–µ–∑ API
        post_data = {
            "channel_id": channel["id"],
            "content": content,
            "scheduled_time": publish_time.isoformat()
        }
        
        try:
            response = requests.post(
                "http://localhost:8000/api/posts",
                json=post_data,
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ –ü–æ—Å—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω (ID: {result['post_id']})")
                print(f"‚è∞ –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {publish_time.strftime('%H:%M:%S')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞ –≤ {channel['id']}: {str(e)}")
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        time.sleep(1)
    
    print("\n" + "=" * 60)
    print("üèÅ –ü–û–°–¢–´ –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–ù–´ –í–û –í–°–ï –ö–ê–ù–ê–õ–´")
    print(f"‚è∞ –í—Å–µ –ø–æ—Å—Ç—ã –±—É–¥—É—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ {publish_time.strftime('%H:%M')}")
    print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª—ã —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã:")
    for channel in channels:
        print(f"   ‚Ä¢ {channel['id']} ({channel['title']})")
    
    print("\nüìä –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–æ–ª–∂–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã!")
    print("üîç –ï—Å–ª–∏ –ø–æ—Å—Ç—ã –Ω–µ –ø–æ—è–≤—è—Ç—Å—è - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")

if __name__ == "__main__":
    schedule_immediate_posts() 