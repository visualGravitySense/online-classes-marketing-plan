#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

import requests
import json
from datetime import datetime, timedelta

def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã"""
    print("üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")
    
    base_url = "http://localhost:8000"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    try:
        response = requests.get(f"{base_url}/api/stats")
        if response.status_code == 200:
            stats = response.json()
            print("‚úÖ /api/stats - —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   ‚Ä¢ –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {stats.get('total_posts', 0)}")
            print(f"   ‚Ä¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {stats.get('published_posts', 0)}")
            print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {stats.get('active_channels', 0)}")
        else:
            print(f"‚ùå /api/stats - –æ—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå /api/stats - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤
    try:
        response = requests.get(f"{base_url}/api/channels")
        if response.status_code == 200:
            channels = response.json()
            print(f"‚úÖ /api/channels - —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–∞–Ω–∞–ª–æ–≤: {len(channels)}")
        else:
            print(f"‚ùå /api/channels - –æ—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå /api/channels - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
    try:
        response = requests.get(f"{base_url}/api/posts")
        if response.status_code == 200:
            posts = response.json()
            print(f"‚úÖ /api/posts - —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Å—Ç–æ–≤: {len(posts)}")
        else:
            print(f"‚ùå /api/posts - –æ—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå /api/posts - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É–¥–∏—Ç–æ—Ä–∏–∏
    try:
        response = requests.get(f"{base_url}/api/content/audiences")
        if response.status_code == 200:
            audiences = response.json()
            print(f"‚úÖ /api/content/audiences - —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   ‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏: {', '.join(audiences.get('audiences', []))}")
        else:
            print(f"‚ùå /api/content/audiences - –æ—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå /api/content/audiences - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    try:
        response = requests.get(f"{base_url}/api/content/types")
        if response.status_code == 200:
            content_types = response.json()
            print(f"‚úÖ /api/content/types - —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   ‚Ä¢ –¢–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {', '.join(content_types.get('content_types', []))}")
        else:
            print(f"‚ùå /api/content/types - –æ—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå /api/content/types - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")

def test_content_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ API"""
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ API...")
    
    base_url = "http://localhost:8000"
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    try:
        data = {
            "audience_group": "–ù–æ–≤–∏—á–∫–∏ –≤ –¥–∏–∑–∞–π–Ω–µ",
            "content_type": "–°–æ–≤–µ—Ç",
            "channel_id": "-1001234567890",
            "custom_prompt": None
        }
        
        response = requests.post(f"{base_url}/api/content/generate", json=data)
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   ‚Ä¢ Preview ID: {result.get('preview_id')}")
            print(f"   ‚Ä¢ –ö–æ–Ω—Ç–µ–Ω—Ç: {result.get('content', '')[:100]}...")
        else:
            print(f"‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –æ—à–∏–±–∫–∞ {response.status_code}")
            print(f"   ‚Ä¢ –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")

def test_post_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ API"""
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ API...")
    
    base_url = "http://localhost:8000"
    
    # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª
    try:
        channel_data = {
            "name": "Test Channel API",
            "chat_id": "-1001234567890",
            "active": True
        }
        
        response = requests.post(f"{base_url}/api/channels", json=channel_data)
        if response.status_code == 200:
            print("‚úÖ –ö–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ API")
        else:
            print(f"‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ - –æ—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞
    try:
        post_data = {
            "content": "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ API",
            "channel_id": "-1001234567890",
            "scheduled_time": (datetime.now() + timedelta(hours=1)).isoformat(),
            "media_path": None,
            "media_type": None
        }
        
        response = requests.post(f"{base_url}/api/posts", json=post_data)
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   ‚Ä¢ Post ID: {result.get('post_id')}")
        else:
            print(f"‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ - –æ—à–∏–±–∫–∞ {response.status_code}")
            print(f"   ‚Ä¢ –û—Ç–≤–µ—Ç: {response.text}")
    except Exception as e:
        print(f"‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")

def test_analytics():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...")
    
    base_url = "http://localhost:8000"
    
    try:
        response = requests.get(f"{base_url}/api/content/analytics")
        if response.status_code == 200:
            analytics = response.json()
            print("‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"   ‚Ä¢ –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {analytics.get('total_posts', 0)}")
            print(f"   ‚Ä¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {analytics.get('published_posts', 0)}")
            print(f"   ‚Ä¢ –û—à–∏–±–æ–∫: {analytics.get('failed_posts', 0)}")
            print(f"   ‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {analytics.get('success_rate', 0):.1f}%")
        else:
            print(f"‚ùå –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –æ—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")

def test_main_page():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
    print("\nüè† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    
    base_url = "http://localhost:8000"
    
    try:
        response = requests.get(f"{base_url}/")
        if response.status_code == 200:
            print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
            print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
        else:
            print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –æ—à–∏–±–∫–∞ {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {e}")

if __name__ == "__main__":
    print("üåê –ó–ê–ü–£–°–ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°–ê")
    print("="*60)
    
    try:
        test_api_endpoints()
        test_content_generation()
        test_post_creation()
        test_analytics()
        test_main_page()
        
        print("\n" + "="*60)
        print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ï–ë-–ò–ù–¢–ï–†–§–ï–ô–°–ê –ó–ê–í–ï–†–®–ï–ù–û!")
        print("="*60)
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc() 