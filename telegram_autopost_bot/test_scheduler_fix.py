#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø–æ—Å—Ç–æ–≤
"""

import requests
import json
from datetime import datetime, timedelta
import time

def test_scheduler():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫"""
    
    print("üîß –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å API
    try:
        response = requests.get("http://localhost:8000/status")
        if response.status_code == 200:
            print("‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            return
    except:
        print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return
    
    # 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
    test_time = datetime.now() + timedelta(minutes=2)  # –ß–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
    
    test_post = {
        "channel_id": "@digo_online_schools",
        "content": f"üß™ –¢–ï–°–¢ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê\n\n–≠—Ç–æ—Ç –ø–æ—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ {test_time.strftime('%H:%M')}\n\n‚úÖ –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ—Ç –ø–æ—Å—Ç - –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç!",
        "scheduled_time": test_time.isoformat()
    }
    
    print(f"üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞ {test_time.strftime('%H:%M')}")
    
    try:
        response = requests.post(
            "http://localhost:8000/posts",
            json=test_post,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            post_data = response.json()
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å–æ–∑–¥–∞–Ω (ID: {post_data['id']})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞: {response.text}")
            return
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Å—Ç–∞: {str(e)}")
        return
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ—Å—Ç –≤ –±–∞–∑–µ
    print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    try:
        response = requests.get("http://localhost:8000/posts/pending")
        if response.status_code == 200:
            posts = response.json()
            test_posts = [p for p in posts if "–¢–ï–°–¢ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê" in p['content']]
            if test_posts:
                print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ (ID: {test_posts[0]['id']})")
            else:
                print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã: {str(e)}")
    
    # 4. –ñ–¥–µ–º –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
    print(f"\n‚è≥ –ñ–¥–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ {test_time.strftime('%H:%M')}...")
    print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª @digo_online_schools —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã")
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã
    print("\n‚è∞ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã...")
    time.sleep(180)
    
    try:
        response = requests.get("http://localhost:8000/posts/published")
        if response.status_code == 200:
            posts = response.json()
            test_posts = [p for p in posts if "–¢–ï–°–¢ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê" in p['content']]
            if test_posts:
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –±—ã–ª –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
                print(f"üìÖ –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {test_posts[0]['published_time']}")
            else:
                print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –Ω–µ –±—ã–ª –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {response.text}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {str(e)}")
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")

if __name__ == "__main__":
    test_scheduler() 