#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ø–æ—Å—Ç–æ–≤
"""

import requests
import time
from datetime import datetime

def check_scheduler_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê")
    print("="*50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
        response = requests.get("http://localhost:8000/api/stats", timeout=5)
        if response.status_code == 200:
            stats = response.json()
            print(f"‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç—ã
            posts_response = requests.get("http://localhost:8000/api/posts", timeout=5)
            if posts_response.status_code == 200:
                posts = posts_response.json()
                
                # –ù–∞—Ö–æ–¥–∏–º –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
                scheduled_posts = [post for post in posts if not post.get('published', False)]
                published_posts = [post for post in posts if post.get('published', False)]
                
                print(f"\nüìù –ü–æ—Å—Ç—ã:")
                print(f"   ‚Ä¢ –í—Å–µ–≥–æ: {len(posts)}")
                print(f"   ‚Ä¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {len(published_posts)}")
                print(f"   ‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {len(scheduled_posts)}")
                
                if scheduled_posts:
                    print(f"\n‚è≥ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã:")
                    for post in scheduled_posts:
                        scheduled_time = post.get('scheduled_time', 'N/A')
                        channel_name = post.get('channel_name', 'N/A')
                        content_preview = post.get('content', '')[:50] + "..."
                        
                        print(f"   ‚Ä¢ ID: {post.get('id')} | –ö–∞–Ω–∞–ª: {channel_name}")
                        print(f"     ‚è∞ –í—Ä–µ–º—è: {scheduled_time}")
                        print(f"     üìÑ –ö–æ–Ω—Ç–µ–Ω—Ç: {content_preview}")
                        print()
                
                return True
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤: {posts_response.status_code}")
                return False
        else:
            print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def start_scheduler():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫"""
    print("\nüöÄ –ó–ê–ü–£–°–ö –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê")
    print("="*50)
    
    try:
        response = requests.post("http://localhost:8000/api/scheduler/start", timeout=5)
        if response.status_code == 200:
            print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")
        return False

def send_manual_test_post():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –≤—Ä—É—á–Ω—É—é"""
    print("\nüì§ –û–¢–ü–†–ê–í–ö–ê –¢–ï–°–¢–û–í–û–ì–û –ü–û–°–¢–ê –í–†–£–ß–ù–£–Æ")
    print("="*50)
    
    test_content = """üß™ –¢–ï–°–¢–û–í–´–ô –ü–û–°–¢

–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.

‚è∞ –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {time}

‚úÖ –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ—Ç –ø–æ—Å—Ç, –∑–Ω–∞—á–∏—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!

#–¢–µ—Å—Ç #UXUI #–ë–æ—Ç""".format(time=datetime.now().strftime('%H:%M:%S'))
    
    channels = [
        {'chat_id': '-1002091962525', 'name': 'digoGraphickDesign'},
        {'chat_id': '-1002123538949', 'name': 'digoUI'}
    ]
    
    for channel in channels:
        print(f"\nüì¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ {channel['name']}...")
        
        try:
            test_data = {
                "channel_id": channel['chat_id'],
                "content": test_content
            }
            
            response = requests.post("http://localhost:8000/api/test_post", json=test_data, timeout=10)
            
            if response.status_code == 200:
                print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ {channel['name']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}")
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {channel['name']}: {e}")

def check_bot_token():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞"""
    print("\nü§ñ –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö –ë–û–¢–ê")
    print("="*50)
    
    try:
        from config import BOT_TOKEN, ADMIN_ID
        
        if BOT_TOKEN and BOT_TOKEN != "your_bot_token_here":
            print(f"‚úÖ –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {BOT_TOKEN[:10]}...")
        else:
            print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
            print("üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        
        if ADMIN_ID and ADMIN_ID != 0:
            print(f"‚úÖ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {ADMIN_ID}")
        else:
            print("‚ùå ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
            print("üí° –î–æ–±–∞–≤—å—Ç–µ ADMIN_ID=–≤–∞—à_id –≤ .env")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")

if __name__ == "__main__":
    print("üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
    check_bot_token()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if check_scheduler_status():
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        if start_scheduler():
            print("\nüí° –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω!")
            print("‚è≥ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –±—É–¥—É—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
            send_manual_test_post()
        else:
            print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫")
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å API —Å–µ—Ä–≤–µ—Ä–æ–º")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python api.py")
    
    print("\n" + "="*60)
    print("‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("="*60) 