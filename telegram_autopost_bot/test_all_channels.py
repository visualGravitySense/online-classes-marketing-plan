#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
"""

import requests
import json
from datetime import datetime, timedelta
import time

def send_test_posts_to_all_channels():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã –≤–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã"""
    
    print("üöÄ –û–¢–ü–†–ê–í–ö–ê –¢–ï–°–¢–û–í–´–• –ü–û–°–¢–û–í –í–û –í–°–ï –ö–ê–ù–ê–õ–´")
    print("=" * 60)
    
    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤
    channels = [
        "@gr de",           # –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –¥–∏–∑–∞–π–Ω–µ—Ä—ã
        "@ui de",           # UX/UI –¥–∏–∑–∞–π–Ω–µ—Ä—ã
        "@digo_online_schools",  # Product Design & ML
        "@designer_lfe"     # –ñ–∏–∑–Ω—å –¥–∏–∑–∞–π–Ω–µ—Ä–∞
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å–µ—Ä–≤–µ—Ä
    try:
        response = requests.get("http://localhost:8000/status")
        if response.status_code != 200:
            print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
            return
        print("‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except:
        print("‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã –≤ –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª
    for i, channel in enumerate(channels, 1):
        print(f"\nüì¢ [{i}/{len(channels)}] –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ {channel}...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
        test_post = {
            "channel_id": channel,
            "content": f"üß™ –¢–ï–°–¢–û–í–´–ô –ü–û–°–¢ #{i}\n\nüìÖ –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}\nüì¢ –ö–∞–Ω–∞–ª: {channel}\n\n‚úÖ –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ—Ç –ø–æ—Å—Ç - –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —ç—Ç–∏–º –∫–∞–Ω–∞–ª–æ–º!\n\nüéØ –≠—Ç–æ —Ç–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.",
            "scheduled_time": datetime.now().isoformat()
        }
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å—Ç —á–µ—Ä–µ–∑ API
            response = requests.post(
                "http://localhost:8000/posts",
                json=test_post,
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                post_data = response.json()
                print(f"‚úÖ –ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω (ID: {post_data['id']})")
                
                # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
                immediate_response = requests.post(
                    f"http://localhost:8000/posts/{post_data['id']}/publish",
                    headers={"Content-Type": "application/json"}
                )
                
                if immediate_response.status_code == 200:
                    print(f"‚úÖ –ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ {channel}")
                else:
                    print(f"‚ö†Ô∏è –ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {immediate_response.text}")
                    
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å {channel}: {str(e)}")
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ—Å—Ç–∞–º–∏
        time.sleep(2)
    
    print("\n" + "=" * 60)
    print("üèÅ –¢–ï–°–¢–û–í–´–ï –ü–û–°–¢–´ –û–¢–ü–†–ê–í–õ–ï–ù–´ –í–û –í–°–ï –ö–ê–ù–ê–õ–´")
    print("\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–∞–Ω–∞–ª—ã:")
    for channel in channels:
        print(f"   ‚Ä¢ {channel}")
    
    print("\nüìä –ï—Å–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –ø–æ—Å—Ç—ã –Ω–µ –ø—Ä–∏—à–ª–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    print("   ‚Ä¢ –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤ –∫–∞–Ω–∞–ª")
    print("   ‚Ä¢ –£ –±–æ—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("   ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–Ω username –∫–∞–Ω–∞–ª–∞")

if __name__ == "__main__":
    send_test_posts_to_all_channels() 