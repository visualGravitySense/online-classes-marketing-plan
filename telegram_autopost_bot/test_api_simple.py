#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç API
"""

import requests
import json

def test_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoints"""
    
    base_url = "http://localhost:8000"
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API")
    print("="*50)
    
    # –¢–µ—Å—Ç 1: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    try:
        response = requests.get(f"{base_url}/", timeout=5)
        print(f"‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ö–∞–Ω–∞–ª—ã
    try:
        response = requests.get(f"{base_url}/api/channels", timeout=5)
        if response.status_code == 200:
            channels = response.json()
            print(f"‚úÖ –ö–∞–Ω–∞–ª—ã: {len(channels)} –Ω–∞–π–¥–µ–Ω–æ")
            for channel in channels:
                print(f"   ‚Ä¢ {channel.get('name', 'N/A')} ({channel.get('chat_id', 'N/A')})")
        else:
            print(f"‚ùå –ö–∞–Ω–∞–ª—ã: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ö–∞–Ω–∞–ª—ã: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ—Å—Ç—ã
    try:
        response = requests.get(f"{base_url}/api/posts", timeout=5)
        if response.status_code == 200:
            posts = response.json()
            print(f"‚úÖ –ü–æ—Å—Ç—ã: {len(posts)} –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print(f"‚ùå –ü–æ—Å—Ç—ã: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –ü–æ—Å—Ç—ã: {e}")
    
    # –¢–µ—Å—Ç 4: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    try:
        response = requests.get(f"{base_url}/api/stats", timeout=5)
        if response.status_code == 200:
            stats = response.json()
            print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –ø–æ–ª—É—á–µ–Ω–∞")
            print(f"   ‚Ä¢ –ö–∞–Ω–∞–ª–æ–≤: {stats.get('channels', 0)}")
            print(f"   ‚Ä¢ –ü–æ—Å—Ç–æ–≤: {stats.get('posts', 0)}")
        else:
            print(f"‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {e}")

if __name__ == "__main__":
    test_api() 