#!/usr/bin/env python3
"""
–°–∏—Å—Ç–µ–º–∞ –ª–∏–¥–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ "Digitalizacija Biznesa"
"""

import telebot
from telebot import types
import sqlite3
import json
import os
from datetime import datetime, timedelta
from dotenv import load_dotenv
import schedule
import time
import threading

load_dotenv()

class LeadGenerationBot:
    def __init__(self):
        self.bot_token = os.getenv('LEAD_BOT_TOKEN') or os.getenv('BOT_TOKEN')
        self.admin_id = int(os.getenv('ADMIN_ID', 0))
        self.bot = telebot.TeleBot(self.bot_token)
        
        # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª–∏–¥–æ–≤
        self.db_path = 'data/digitalizacija_leads.db'
        self.init_database()
        
        # –í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂
        self.sales_funnel = {
            'awareness': '–û—Å–≤–µ–¥–æ–º–ª–µ–Ω–Ω–æ—Å—Ç—å',
            'interest': '–ò–Ω—Ç–µ—Ä–µ—Å', 
            'consideration': '–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ',
            'intent': '–ù–∞–º–µ—Ä–µ–Ω–∏–µ',
            'purchase': '–ü–æ–∫—É–ø–∫–∞'
        }
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        self.setup_handlers()
        
        # –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
        self.free_materials = {
            'guide': {
                'title': '10 —à–∞–≥–æ–≤ –∫ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞',
                'file': 'content-folder/digitalizacija/materials/guides/10_steps_digitalization.md',
                'description': '–ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤ –≤–∞—à –±–∏–∑–Ω–µ—Å'
            },
            'crm_guide': {
                'title': '–í—ã–±–æ—Ä CRM-—Å–∏—Å—Ç–µ–º—ã –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞',
                'file': 'content-folder/digitalizacija/materials/guides/crm_selection_guide.md',
                'description': '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ª—É—á—à–∏—Ö CRM-—Å–∏—Å—Ç–µ–º –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–±–æ—Ä—É'
            },
            'automation_templates': {
                'title': '–®–∞–±–ª–æ–Ω—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
                'file': 'content-folder/digitalizacija/materials/guides/automation_templates.md',
                'description': '–ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤'
            }
        }
    
    def init_database(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª–∏–¥–æ–≤"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        # –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–æ–≤
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS leads (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER UNIQUE,
                username TEXT,
                first_name TEXT,
                last_name TEXT,
                phone TEXT,
                email TEXT,
                business_type TEXT,
                business_size TEXT,
                current_stage TEXT DEFAULT 'awareness',
                source TEXT DEFAULT 'bot',
                interests TEXT,
                pain_points TEXT,
                budget TEXT,
                timeline TEXT,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS interactions (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER,
                action TEXT,
                data TEXT,
                timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES leads (user_id)
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–π
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS conversions (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER,
                from_stage TEXT,
                to_stage TEXT,
                trigger TEXT,
                timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES leads (user_id)
            )
        ''')
        
        # –¢–∞–±–ª–∏—Ü–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS materials_sent (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                user_id INTEGER,
                material_type TEXT,
                sent_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (user_id) REFERENCES leads (user_id)
            )
        ''')
        
        conn.commit()
        conn.close()
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        
        @self.bot.message_handler(commands=['start'])
        def start(message):
            self.handle_start(message)
        
        @self.bot.message_handler(commands=['help'])
        def help_command(message):
            self.handle_help(message)
        
        @self.bot.message_handler(commands=['status'])
        def status_command(message):
            self.handle_status(message)
        
        @self.bot.message_handler(func=lambda message: True)
        def handle_all_messages(message):
            self.handle_message(message)
    
    def handle_start(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
        user_id = message.from_user.id
        username = message.from_user.username
        first_name = message.from_user.first_name
        last_name = message.from_user.last_name
        
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–∏–¥–∞
        self.create_or_update_lead(user_id, username, first_name, last_name)
        
        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        btn1 = types.KeyboardButton("üéØ –ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≥–∞–π–¥")
        btn2 = types.KeyboardButton("üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è")
        btn3 = types.KeyboardButton("üí≥ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å")
        btn4 = types.KeyboardButton("üìä –ê—É–¥–∏—Ç –±–∏–∑–Ω–µ—Å–∞")
        btn5 = types.KeyboardButton("‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
        btn6 = types.KeyboardButton("üë• –ù–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ")
        
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
        
        welcome_text = f"""
üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞, {first_name}!

–Ø –ø–æ–º–æ–≥—É –≤–∞–º:

‚úÖ **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã**
‚Ä¢ CRM-—Å–∏—Å—Ç–µ–º—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ –∏ –ø—Ä–æ–¥–∞–∂
‚Ä¢ –ß–∞—Ç-–±–æ—Ç—ã –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

‚úÖ **–í–Ω–µ–¥—Ä–∏—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥**
‚Ä¢ Email-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥
‚Ä¢ –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞

‚úÖ **–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É**
‚Ä¢ KPI –∏ –º–µ—Ç—Ä–∏–∫–∏
‚Ä¢ –î–∞—à–±–æ—Ä–¥—ã –∏ –æ—Ç—á–µ—Ç—ã
‚Ä¢ –ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö

‚úÖ **–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –±–∏–∑–Ω–µ—Å**
‚Ä¢ –û–±–ª–∞—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–æ—Å—Ç–∞
‚Ä¢ –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Ä–∞–∑–≤–∏—Ç–∏—è

üéÅ **–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:**
‚Ä¢ –ß–µ–∫-–ª–∏—Å—Ç "10 —à–∞–≥–æ–≤ –∫ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏"
‚Ä¢ –ì–∞–π–¥ "–í—ã–±–æ—Ä CRM-—Å–∏—Å—Ç–µ–º—ã"
‚Ä¢ –®–∞–±–ª–æ–Ω—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏

–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:
        """
        
        self.bot.send_message(
            message.chat.id,
            welcome_text,
            reply_markup=markup,
            parse_mode='Markdown'
        )
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
        self.record_interaction(user_id, 'start', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞')
    
    def handle_help(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """
ü§ñ **–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞**

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏

**–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å:**
üéØ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏
üìû –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
üí≥ –ó–∞–ø–∏—Å—å –Ω–∞ –∫—É—Ä—Å "Digitalizacija Biznesa"
üìä –ê—É–¥–∏—Ç –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞

**–ù–∞—à–∏ –∫–∞–Ω–∞–ª—ã:**
üì∫ @digitalizacija_biznesa - –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª
‚öôÔ∏è @biznes_automation - –ö–µ–π—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
üöÄ @startup_digital - –î–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤

**–ù–∞—à–∏ –≥—Ä—É–ø–ø—ã:**
üë• @digitalizacija_community - –°–æ–æ–±—â–µ—Å—Ç–≤–æ
üíº @biznes_consulting - –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
üí° @automation_tips - –°–æ–≤–µ—Ç—ã

**–ü–æ–¥–¥–µ—Ä–∂–∫–∞:**
–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É @digitalizacija_community
        """
        
        self.bot.send_message(
            message.chat.id,
            help_text,
            parse_mode='Markdown'
        )
    
    def handle_status(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /status"""
        user_id = message.from_user.id
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏–¥–µ
        lead_info = self.get_lead_info(user_id)
        
        if lead_info:
            status_text = f"""
üìä **–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏**

üë§ **–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:**
–ò–º—è: {lead_info['first_name']} {lead_info['last_name']}
–ë–∏–∑–Ω–µ—Å: {lead_info['business_type'] or '–ù–µ —É–∫–∞–∑–∞–Ω'}
–†–∞–∑–º–µ—Ä: {lead_info['business_size'] or '–ù–µ —É–∫–∞–∑–∞–Ω'}

üéØ **–¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø:** {self.sales_funnel.get(lead_info['current_stage'], '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}

üìÖ **–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** {lead_info['created_at']}

üìã **–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:**
{self.get_materials_sent(user_id)}

**–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:**
{self.get_next_steps(lead_info['current_stage'])}
            """
        else:
            status_text = "‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start"
        
        self.bot.send_message(
            message.chat.id,
            status_text,
            parse_mode='Markdown'
        )
    
    def handle_message(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user_id = message.from_user.id
        text = message.text
        
        if text == "üéØ –ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≥–∞–π–¥":
            self.handle_free_guide(message)
        elif text == "üìû –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è":
            self.handle_consultation(message)
        elif text == "üí≥ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å":
            self.handle_course_registration(message)
        elif text == "üìä –ê—É–¥–∏—Ç –±–∏–∑–Ω–µ—Å–∞":
            self.handle_business_audit(message)
        elif text == "‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã":
            self.handle_faq(message)
        elif text == "üë• –ù–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ":
            self.handle_community(message)
        else:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.handle_general_message(message)
    
    def handle_free_guide(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –≥–∞–π–¥–∞"""
        user_id = message.from_user.id
        
        # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
        markup = types.InlineKeyboardMarkup(row_width=1)
        
        for key, material in self.free_materials.items():
            btn = types.InlineKeyboardButton(
                f"üìÑ {material['title']}",
                callback_data=f"material_{key}"
            )
            markup.add(btn)
        
        text = """
üéÅ **–í—ã–±–µ—Ä–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª:**

üìÑ **10 —à–∞–≥–æ–≤ –∫ —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞**
–ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –≤–Ω–µ–¥—Ä–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π

üìÑ **–í—ã–±–æ—Ä CRM-—Å–∏—Å—Ç–µ–º—ã –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞**
–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ª—É—á—à–∏—Ö CRM-—Å–∏—Å—Ç–µ–º –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

üìÑ **–®–∞–±–ª–æ–Ω—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤**
–ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏

–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å:
        """
        
        self.bot.send_message(
            message.chat.id,
            text,
            reply_markup=markup,
            parse_mode='Markdown'
        )
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
        self.record_interaction(user_id, 'free_guide_request', '–ó–∞–ø—Ä–æ—Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –≥–∞–π–¥–∞')
        
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å—Ç–∞–¥–∏—é "–ò–Ω—Ç–µ—Ä–µ—Å"
        self.move_lead_stage(user_id, 'awareness', 'interest', '–ó–∞–ø—Ä–æ—Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞')
    
    def handle_consultation(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"""
        user_id = message.from_user.id
        
        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn = types.KeyboardButton("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
        markup.add(btn)
        
        text = """
üìû **–ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é**

–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –Ω–∞–º –Ω—É–∂–Ω–∞ –≤–∞—à–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.

**–ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è:**
‚úÖ –ê—É–¥–∏—Ç —Ç–µ–∫—É—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
‚úÖ –ü–ª–∞–Ω —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏
‚úÖ –ü–æ–¥–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
‚úÖ –†–∞—Å—á–µ—Ç ROI

**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** 30-45 –º–∏–Ω—É—Ç
**–°—Ç–æ–∏–º–æ—Å—Ç—å:** –ë–µ—Å–ø–ª–∞—Ç–Ω–æ

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:
        """
        
        self.bot.send_message(
            message.chat.id,
            text,
            reply_markup=markup,
            parse_mode='Markdown'
        )
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
        self.record_interaction(user_id, 'consultation_request', '–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏')
        
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å—Ç–∞–¥–∏—é "–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ"
        self.move_lead_stage(user_id, 'interest', 'consideration', '–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏')
    
    def handle_course_registration(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å"""
        user_id = message.from_user.id
        
        # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞
        markup = types.InlineKeyboardMarkup(row_width=1)
        
        btn1 = types.InlineKeyboardButton(
            "üíé –ü—Ä–µ–º–∏—É–º (–ø–æ–ª–Ω—ã–π –∫—É—Ä—Å + –ø–æ–¥–¥–µ—Ä–∂–∫–∞)",
            callback_data="course_premium"
        )
        btn2 = types.InlineKeyboardButton(
            "üìö –°—Ç–∞–Ω–¥–∞—Ä—Ç (–æ—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å)",
            callback_data="course_standard"
        )
        btn3 = types.InlineKeyboardButton(
            "üéØ –ë–∞–∑–æ–≤—ã–π (–æ—Å–Ω–æ–≤—ã —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏)",
            callback_data="course_basic"
        )
        
        markup.add(btn1, btn2, btn3)
        
        text = """
üí≥ **–ó–∞–ø–∏—Å—å –Ω–∞ –∫—É—Ä—Å "Digitalizacija Biznesa"**

**–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ:**

üíé **–ü—Ä–µ–º–∏—É–º** - $297
‚Ä¢ –ü–æ–ª–Ω—ã–π –∫—É—Ä—Å (5 –º–æ–¥—É–ª–µ–π)
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É
‚Ä¢ –ë–æ–Ω—É—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç

üìö **–°—Ç–∞–Ω–¥–∞—Ä—Ç** - $197
‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π –∫—É—Ä—Å (5 –º–æ–¥—É–ª–µ–π)
‚Ä¢ –ì—Ä—É–ø–ø–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç

üéØ **–ë–∞–∑–æ–≤—ã–π** - $97
‚Ä¢ –û—Å–Ω–æ–≤—ã —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏ (2 –º–æ–¥—É–ª—è)
‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç

**–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ:**
        """
        
        self.bot.send_message(
            message.chat.id,
            text,
            reply_markup=markup,
            parse_mode='Markdown'
        )
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
        self.record_interaction(user_id, 'course_registration', '–ó–∞–ø—Ä–æ—Å –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å')
        
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å—Ç–∞–¥–∏—é "–ù–∞–º–µ—Ä–µ–Ω–∏–µ"
        self.move_lead_stage(user_id, 'consideration', 'intent', '–ó–∞–ø—Ä–æ—Å –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫—É—Ä—Å')
    
    def handle_business_audit(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∞—É–¥–∏—Ç–∞ –±–∏–∑–Ω–µ—Å–∞"""
        user_id = message.from_user.id
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        
        btn1 = types.KeyboardButton("üè¢ –ú–∞–ª—ã–π –±–∏–∑–Ω–µ—Å (1-10 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)")
        btn2 = types.KeyboardButton("üè≠ –°—Ä–µ–¥–Ω–∏–π –±–∏–∑–Ω–µ—Å (11-50 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)")
        btn3 = types.KeyboardButton("üè¢ –ö—Ä—É–ø–Ω—ã–π –±–∏–∑–Ω–µ—Å (50+ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)")
        btn4 = types.KeyboardButton("üë§ –ò–ü/–§—Ä–∏–ª–∞–Ω—Å–µ—Ä")
        
        markup.add(btn1, btn2, btn3, btn4)
        
        text = """
üìä **–ê—É–¥–∏—Ç –±–∏–∑–Ω–µ—Å–∞**

–î–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞ –Ω–∞–º –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ.

**–ß—Ç–æ –≤–∫–ª—é—á–∞–µ—Ç –∞—É–¥–∏—Ç:**
‚úÖ –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
‚úÖ –û—Ü–µ–Ω–∫–∞ —É—Ä–æ–≤–Ω—è —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏
‚úÖ –í—ã—è–≤–ª–µ–Ω–∏–µ —É–∑–∫–∏—Ö –º–µ—Å—Ç
‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
‚úÖ –ü–ª–∞–Ω –≤–Ω–µ–¥—Ä–µ–Ω–∏—è

**–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞:**
        """
        
        self.bot.send_message(
            message.chat.id,
            text,
            reply_markup=markup,
            parse_mode='Markdown'
        )
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
        self.record_interaction(user_id, 'audit_request', '–ó–∞–ø—Ä–æ—Å –∞—É–¥–∏—Ç–∞ –±–∏–∑–Ω–µ—Å–∞')
    
    def handle_faq(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""
        faq_text = """
‚ùì **–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã**

**Q: –°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω—É–∂–Ω–æ –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏–∏?**
A: –û—Ç 1 –¥–æ 6 –º–µ—Å—è—Ü–µ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ —Ä–∞–∑–º–µ—Ä–∞ –±–∏–∑–Ω–µ—Å–∞.

**Q: –ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã?**
A: CRM-—Å–∏—Å—Ç–µ–º–∞, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–∞—à–∏—Ö –∑–∞–¥–∞—á.

**Q: –°–∫–æ–ª—å–∫–æ —ç—Ç–æ —Å—Ç–æ–∏—Ç?**
A: –û—Ç $50 –¥–æ $500 –≤ –º–µ—Å—è—Ü –Ω–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã. ROI –æ–±—ã—á–Ω–æ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 300-500%.

**Q: –ù—É–∂–Ω—ã –ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞–Ω–∏—è?**
A: –ë–∞–∑–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º. –ú—ã –æ–±—É—á–∞–µ–º –≤—Å–µ–º—É —Å –Ω—É–ª—è.

**Q: –ú–æ–∂–Ω–æ –ª–∏ –Ω–∞—á–∞—Ç—å —Å –º–∞–ª–æ–≥–æ?**
A: –î–∞! –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—á–∏–Ω–∞—Ç—å —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ 1-2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.

**Q: –ö–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —è –ø–æ–ª—É—á—É?**
A: –≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ 30-50%, —Ä–æ—Å—Ç –ø—Ä–æ–¥–∞–∂ 20-40%, —É–ª—É—á—à–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞.

**–ï—Å—Ç—å –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É @digitalizacija_community**
        """
        
        self.bot.send_message(
            message.chat.id,
            faq_text,
            parse_mode='Markdown'
        )
    
    def handle_community(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ"""
        community_text = """
üë• **–ù–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ**

**–û—Å–Ω–æ–≤–Ω–∞—è –≥—Ä—É–ø–ø–∞:** @digitalizacija_community
‚Ä¢ –û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ç–µ–º –∫—É—Ä—Å–∞
‚Ä¢ –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
‚Ä¢ –û–±–º–µ–Ω –æ–ø—ã—Ç–æ–º
‚Ä¢ –ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥

**–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:** @biznes_consulting
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
‚Ä¢ –ê—É–¥–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

**–°–æ–≤–µ—Ç—ã:** @automation_tips
‚Ä¢ –õ–∞–π—Ñ—Ö–∞–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
‚Ä¢ –û–±–∑–æ—Ä—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
‚Ä¢ –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏

**–ö–∞–Ω–∞–ª—ã:**
üì∫ @digitalizacija_biznesa - –û—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª
‚öôÔ∏è @biznes_automation - –ö–µ–π—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
üöÄ @startup_digital - –î–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–æ–≤

**–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É!**
        """
        
        self.bot.send_message(
            message.chat.id,
            community_text,
            parse_mode='Markdown'
        )
    
    def handle_general_message(self, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user_id = message.from_user.id
        text = message.text
        
        # –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
        if any(word in text.lower() for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', '–¥–æ–±—Ä—ã–π –¥–µ–Ω—å']):
            response = f"–ü—Ä–∏–≤–µ—Ç! üëã –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
        elif any(word in text.lower() for word in ['—Å–ø–∞—Å–∏–±–æ', '–±–ª–∞–≥–æ–¥–∞—Ä—é']):
            response = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä –ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å."
        elif any(word in text.lower() for word in ['—Ü–µ–Ω–∞', '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '—Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç']):
            response = "–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞ –æ—Ç $97 –¥–æ $297. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: üí≥ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å"
        elif any(word in text.lower() for word in ['–≤—Ä–µ–º—è', '–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏']):
            response = "–ö—É—Ä—Å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –Ω–∞ 30 –¥–Ω–µ–π. –ú–æ–∂–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ —Å–≤–æ–µ–º —Ç–µ–º–ø–µ."
        else:
            response = """
–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å. ü§î

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É @digitalizacija_community

–¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.
            """
        
        self.bot.send_message(message.chat.id, response)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
        self.record_interaction(user_id, 'general_message', f'–°–æ–æ–±—â–µ–Ω–∏–µ: {text[:100]}')
    
    def create_or_update_lead(self, user_id, username, first_name, last_name):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–∏–¥–∞"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        cursor.execute('''
            INSERT OR REPLACE INTO leads 
            (user_id, username, first_name, last_name, updated_at)
            VALUES (?, ?, ?, ?, ?)
        ''', (user_id, username, first_name, last_name, datetime.now()))
        
        conn.commit()
        conn.close()
    
    def get_lead_info(self, user_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏–¥–µ"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        cursor.execute('SELECT * FROM leads WHERE user_id = ?', (user_id,))
        lead = cursor.fetchone()
        
        conn.close()
        
        if lead:
            return {
                'user_id': lead[1],
                'username': lead[2],
                'first_name': lead[3],
                'last_name': lead[4],
                'phone': lead[5],
                'email': lead[6],
                'business_type': lead[7],
                'business_size': lead[8],
                'current_stage': lead[9],
                'created_at': lead[15]
            }
        
        return None
    
    def record_interaction(self, user_id, action, data):
        """–ó–∞–ø–∏—Å—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        cursor.execute('''
            INSERT INTO interactions (user_id, action, data)
            VALUES (?, ?, ?)
        ''', (user_id, action, data))
        
        conn.commit()
        conn.close()
    
    def move_lead_stage(self, user_id, from_stage, to_stage, trigger):
        """–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ª–∏–¥–∞ –ø–æ –≤–æ—Ä–æ–Ω–∫–µ"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞–¥–∏—é –ª–∏–¥–∞
        cursor.execute('''
            UPDATE leads 
            SET current_stage = ?, updated_at = ?
            WHERE user_id = ?
        ''', (to_stage, datetime.now(), user_id))
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Å–∏—é
        cursor.execute('''
            INSERT INTO conversions (user_id, from_stage, to_stage, trigger)
            VALUES (?, ?, ?, ?)
        ''', (user_id, from_stage, to_stage, trigger))
        
        conn.commit()
        conn.close()
    
    def get_materials_sent(self, user_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"""
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        
        cursor.execute('''
            SELECT material_type FROM materials_sent 
            WHERE user_id = ?
            ORDER BY sent_at
        ''', (user_id,))
        
        materials = cursor.fetchall()
        conn.close()
        
        if materials:
            return '\n'.join([f"‚Ä¢ {material[0]}" for material in materials])
        else:
            return "–ü–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã"
    
    def get_next_steps(self, current_stage):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤ –¥–ª—è —Å—Ç–∞–¥–∏–∏"""
        steps = {
            'awareness': "–ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –≥–∞–π–¥ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å —Ç–µ–º–æ–π",
            'interest': "–ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–±–æ—Ä–∞",
            'consideration': "–ü—Ä–æ–π–¥–∏—Ç–µ –∞—É–¥–∏—Ç –±–∏–∑–Ω–µ—Å–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π",
            'intent': "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –∫—É—Ä—Å–∞",
            'purchase': "–ù–∞—á–Ω–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ"
        }
        
        return steps.get(current_stage, "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–∑—É—á–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        print("ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ª–∏–¥–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏...")
        self.bot.polling(none_stop=True)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    bot = LeadGenerationBot()
    bot.run()

if __name__ == "__main__":
    main() 