#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∫–∞–º–ø–∞–Ω–∏–∏ "Digitalizacija Biznesa"
"""

import os
import sys
import json
import time
from datetime import datetime
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from welcome_posts import WelcomePostsManager
from digitalizacija_scheduler import DigitalizacijaScheduler
from config import DIGITALIZACIJA_CHANNELS

load_dotenv()

class DigitalizacijaSystem:
    def __init__(self):
        self.system_name = "Digitalizacija Biznesa"
        self.version = "1.0.0"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        self.check_environment()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        self.welcome_manager = WelcomePostsManager()
        self.scheduler = DigitalizacijaScheduler()
    
    def check_environment(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
        
        required_vars = [
            'BOT_TOKEN',
            'ADMIN_ID'
        ]
        
        missing_vars = []
        for var in required_vars:
            if not os.getenv(var):
                missing_vars.append(var)
        
        if missing_vars:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing_vars)}")
            print("–î–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ .env —Ñ–∞–π–ª")
            sys.exit(1)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º ID –∫–∞–Ω–∞–ª–æ–≤
        channel_vars = [
            'DIGITALIZACIJA_MAIN_CHANNEL_ID',
            'BIZNES_AUTOMATION_CHANNEL_ID',
            'STARTUP_DIGITAL_CHANNEL_ID',
            'DIGITALIZACIJA_COMMUNITY_ID',
            'BIZNES_CONSULTING_ID',
            'AUTOMATION_TIPS_ID'
        ]
        
        missing_channels = []
        for var in channel_vars:
            if not os.getenv(var):
                missing_channels.append(var)
        
        if missing_channels:
            print(f"‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç ID –∫–∞–Ω–∞–ª–æ–≤: {', '.join(missing_channels)}")
            print("–°–æ–∑–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª—ã –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö ID –≤ .env —Ñ–∞–π–ª")
        
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    def load_channel_ids(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ ID –∫–∞–Ω–∞–ª–æ–≤"""
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Ñ–∞–π–ª–∞
            with open('digitalizacija_channel_ids.json', 'r', encoding='utf-8') as f:
                return json.load(f)
        except FileNotFoundError:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
            return {
                'digitalizacija_main': {
                    'chat_id': os.getenv('DIGITALIZACIJA_MAIN_CHANNEL_ID'),
                    'username': 'digitalizacija_biznesa'
                },
                'biznes_automation': {
                    'chat_id': os.getenv('BIZNES_AUTOMATION_CHANNEL_ID'),
                    'username': 'biznes_automation'
                },
                'startup_digital': {
                    'chat_id': os.getenv('STARTUP_DIGITAL_CHANNEL_ID'),
                    'username': 'startup_digital'
                },
                'digitalizacija_community': {
                    'chat_id': os.getenv('DIGITALIZACIJA_COMMUNITY_ID'),
                    'username': 'digitalizacija_community'
                },
                'biznes_consulting': {
                    'chat_id': os.getenv('BIZNES_CONSULTING_ID'),
                    'username': 'biznes_consulting'
                },
                'automation_tips': {
                    'chat_id': os.getenv('AUTOMATION_TIPS_ID'),
                    'username': 'automation_tips'
                }
            }
    
    def send_welcome_posts(self):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤"""
        print("\nüìù –û–¢–ü–†–ê–í–ö–ê –ü–†–ò–í–ï–¢–°–¢–í–ï–ù–ù–´–• –ü–û–°–¢–û–í")
        print("=" * 50)
        
        channel_ids = self.load_channel_ids()
        results = self.welcome_manager.send_all_welcome_posts(channel_ids)
        
        success_count = sum(1 for r in results.values() if r['status'] == 'success')
        total_count = len(results)
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {success_count}/{total_count} —É—Å–ø–µ—à–Ω–æ")
        
        return success_count == total_count
    
    def setup_scheduler(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        print("\n‚è∞ –ù–ê–°–¢–†–û–ô–ö–ê –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê")
        print("=" * 50)
        
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã
            print("üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤...")
            self.scheduler.create_test_posts()
            
            # –ü–ª–∞–Ω–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –Ω–µ–¥–µ–ª—é
            print("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é...")
            self.scheduler.schedule_weekly_content()
            
            print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {e}")
            return False
    
    def show_statistics(self):
        """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´")
        print("=" * 50)
        
        try:
            stats = self.scheduler.get_statistics()
            
            print(f"üìù –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {stats['total_posts']}")
            print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {stats['sent_posts']}")
            print(f"‚è≥ –û–∂–∏–¥–∞—é—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏: {stats['pending_posts']}")
            
            print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–Ω–∞–ª–∞–º:")
            for channel_id, count in stats['channel_stats']:
                channel_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª"
                for key, info in DIGITALIZACIJA_CHANNELS.items():
                    if info['chat_id'] == channel_id:
                        channel_name = info['name']
                        break
                print(f"  {channel_name}: {count} –ø–æ—Å—Ç–æ–≤")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
    
    def show_menu(self):
        """–ü–æ–∫–∞–∑ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        print("\nüéõÔ∏è –ú–ï–ù–Æ –£–ü–†–ê–í–õ–ï–ù–ò–Ø")
        print("=" * 50)
        print("1. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã")
        print("2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫")
        print("3. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("4. –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫")
        print("5. –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã")
        print("6. –í—ã—Ö–æ–¥")
        print("-" * 50)
    
    def run_interactive(self):
        """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º"""
        print(f"üöÄ –°–∏—Å—Ç–µ–º–∞ {self.system_name} v{self.version}")
        print("=" * 60)
        
        while True:
            self.show_menu()
            
            try:
                choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-6): ").strip()
                
                if choice == '1':
                    self.send_welcome_posts()
                    
                elif choice == '2':
                    self.setup_scheduler()
                    
                elif choice == '3':
                    self.show_statistics()
                    
                elif choice == '4':
                    print("\nüöÄ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
                    print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
                    try:
                        self.scheduler.run_scheduler()
                    except KeyboardInterrupt:
                        print("\n‚èπÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                    
                elif choice == '5':
                    print("\nüß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤...")
                    self.scheduler.create_test_posts()
                    
                elif choice == '6':
                    print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break
                    
                else:
                    print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                    
            except KeyboardInterrupt:
                print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    def run_automatic(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º"""
        print(f"üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã {self.system_name}")
        print("=" * 60)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
        print("\n1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤...")
        if not self.send_welcome_posts():
            print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç—ã –Ω–µ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        print("\n2Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
        if not self.setup_scheduler():
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print("\n3Ô∏è‚É£ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
        self.show_statistics()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        print("\n4Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
        print("–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ")
        print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        try:
            self.scheduler.run_scheduler()
        except KeyboardInterrupt:
            print("\n‚èπÔ∏è –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    def run(self, mode='interactive'):
        """–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã"""
        if mode == 'automatic':
            self.run_automatic()
        else:
            self.run_interactive()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import argparse
    
    parser = argparse.ArgumentParser(description='–°–∏—Å—Ç–µ–º–∞ –∫–∞–º–ø–∞–Ω–∏–∏ "Digitalizacija Biznesa"')
    parser.add_argument('--mode', choices=['interactive', 'automatic'], 
                       default='interactive', help='–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã')
    parser.add_argument('--welcome-only', action='store_true', 
                       help='–¢–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã')
    parser.add_argument('--setup-only', action='store_true', 
                       help='–¢–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫')
    
    args = parser.parse_args()
    
    system = DigitalizacijaSystem()
    
    if args.welcome_only:
        print("üìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤...")
        system.send_welcome_posts()
    elif args.setup_only:
        print("‚è∞ –¢–æ–ª—å–∫–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
        system.setup_scheduler()
    else:
        system.run(args.mode)

if __name__ == "__main__":
    main() 