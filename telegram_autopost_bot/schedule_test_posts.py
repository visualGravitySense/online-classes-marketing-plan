#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –≤ Telegram –∫–∞–Ω–∞–ª–∞—Ö
"""

import requests
import time
from datetime import datetime, timedelta

def schedule_test_posts():
    """–ü–ª–∞–Ω–∏—Ä—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã –≤ –∫–∞–Ω–∞–ª–∞—Ö –Ω–∞ 12:40"""
    
    # –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: 12:40
    scheduled_time = datetime.now().replace(hour=12, minute=40, second=0, microsecond=0)
    
    # –ï—Å–ª–∏ –≤—Ä–µ–º—è —É–∂–µ –ø—Ä–æ—à–ª–æ, –ø–ª–∞–Ω–∏—Ä—É–µ–º –Ω–∞ –∑–∞–≤—Ç—Ä–∞
    if scheduled_time < datetime.now():
        scheduled_time += timedelta(days=1)
    
    print(f"‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –Ω–∞: {scheduled_time.strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
    channels = [
        {
            'chat_id': '-1002091962525',
            'name': 'digoGraphickDesign',
            'content': """üé® UX/UI –ü—Ä–∏–Ω—Ü–∏–ø –¥–Ω—è

üí° "–ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å - –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É"

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ–∂–∏–¥–∞—é—Ç, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –±—É–¥—É—Ç –≤–µ—Å—Ç–∏ —Å–µ–±—è –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ. –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –≤ –¥–∏–∑–∞–π–Ω–µ —Å–æ–∑–¥–∞–µ—Ç –¥–æ–≤–µ—Ä–∏–µ –∏ —É–ª—É—á—à–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç.

üîß –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–¥–∏–Ω—É—é —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É
‚Ä¢ –°–æ–±–ª—é–¥–∞–π—Ç–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –æ—Ç—Å—Ç—É–ø—ã
‚Ä¢ –ü—Ä–∏–º–µ–Ω—è–π—Ç–µ –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∏–∫–æ–Ω–∫–∏
‚Ä¢ –°–ª–µ–¥—É–π—Ç–µ –µ–¥–∏–Ω–æ–º—É —Å—Ç–∏–ª—é –∫–Ω–æ–ø–æ–∫

üìö –ò–∑—É—á–∞–π—Ç–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–∏–∑–∞–π–Ω–∞ –∏ –ø—Ä–∏–º–µ–Ω—è–π—Ç–µ –∏—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ!

üîñ –°–æ—Ö—Ä–∞–Ω—è–π –ø–æ—Å—Ç, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å!
üí¨ –î–µ–ª–∏—Å—å —Å–≤–æ–∏–º –º–Ω–µ–Ω–∏–µ–º –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö

#UXUITips #–î–∏–∑–∞–π–Ω #–ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å #UXUI"""
        },
        {
            'chat_id': '-1002123538949',
            'name': 'digoUI',
            'content': """üìä UX/UI –ö–µ–π—Å: –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

üéØ –ó–∞–¥–∞—á–∞: –£–ª—É—á—à–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏

‚ùå –ü—Ä–æ–±–ª–µ–º—ã –≤ —Å—Ç–∞—Ä–æ–º –¥–∏–∑–∞–π–Ω–µ:
- –°–∫—Ä—ã—Ç–æ–µ –º–µ–Ω—é –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
- –ù–µ–æ—á–µ–≤–∏–¥–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è —Ä–∞–∑–¥–µ–ª–æ–≤
- –°–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∏—Å–∫–∞

‚úÖ –†–µ—à–µ–Ω–∏–µ:
- –ù–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å 5 –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏
- –ß–µ—Ç–∫–∞—è –≤–∏–∑—É–∞–ª—å–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è
- –£–º–Ω—ã–π –ø–æ–∏—Å–∫ —Å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º

üìà –†–µ–∑—É–ª—å—Ç–∞—Ç: +45% –≤—Ä–µ–º–µ–Ω–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏, -30% –æ—Ç–∫–∞–∑–æ–≤

üí° –í—ã–≤–æ–¥: –ü—Ä–æ—Å—Ç–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è = –¥–æ–≤–æ–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏

‚ùì –ö–∞–∫ –±—ã –≤—ã —É–ª—É—á—à–∏–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏—é?
üëÜ –°—Ç–∞–≤—å –ª–∞–π–∫, –µ—Å–ª–∏ –∫–µ–π—Å –ø–æ–ª–µ–∑–µ–Ω!

#–ö–µ–π—Å #UXDesign #–ú–æ–±–∏–ª—å–Ω—ã–π–î–∏–∑–∞–π–Ω #–ù–∞–≤–∏–≥–∞—Ü–∏—è"""
        }
    ]
    
    print("üöÄ –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –ü–û–°–¢–û–í –í TELEGRAM")
    print("="*50)
    
    for channel in channels:
        print(f"\nüì¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª: {channel['name']}")
        
        try:
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç
            post_data = {
                "content": channel['content'],
                "channel_id": channel['chat_id'],
                "scheduled_time": scheduled_time.isoformat(),
                "media_path": None,
                "media_type": None
            }
            
            response = requests.post("http://localhost:8000/api/posts", json=post_data, timeout=10)
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ –ü–æ—Å—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω –≤ {channel['name']}")
                print(f"üìÑ ID –ø–æ—Å—Ç–∞: {result.get('post_id')}")
                print(f"‚è∞ –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {scheduled_time.strftime('%H:%M')}")
                print(f"üìÑ –ö–æ–Ω—Ç–µ–Ω—Ç: {channel['content'][:50]}...")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {response.status_code}")
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                
        except requests.exceptions.ConnectionError:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API —Å–µ—Ä–≤–µ—Ä—É")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python api.py")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ {channel['name']}: {e}")
        
        print("-" * 30)
        time.sleep(1)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

def check_scheduled_posts():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã"""
    print("\nüìã –ü–†–û–í–ï–†–ö–ê –ó–ê–ü–õ–ê–ù–ò–†–û–í–ê–ù–ù–´–• –ü–û–°–¢–û–í")
    print("="*50)
    
    try:
        response = requests.get("http://localhost:8000/api/posts", timeout=5)
        if response.status_code == 200:
            posts = response.json()
            
            # –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
            scheduled_posts = [post for post in posts if not post.get('published', False)]
            
            print(f"üìä –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {len(posts)}")
            print(f"‚è≥ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {len(scheduled_posts)}")
            
            if scheduled_posts:
                print("\nüìù –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã:")
                for i, post in enumerate(scheduled_posts[:5], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                    scheduled_time = post.get('scheduled_time', 'N/A')
                    channel_name = post.get('channel_name', 'N/A')
                    content_preview = post.get('content', '')[:50] + "..."
                    
                    print(f"   {i}. ID: {post.get('id')} | –ö–∞–Ω–∞–ª: {channel_name}")
                    print(f"      ‚è∞ –í—Ä–µ–º—è: {scheduled_time}")
                    print(f"      üìÑ –ö–æ–Ω—Ç–µ–Ω—Ç: {content_preview}")
                    print()
            else:
                print("üì≠ –ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å—Ç–æ–≤: {e}")

def check_api_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å API"""
    try:
        response = requests.get("http://localhost:8000/api/stats", timeout=5)
        if response.status_code == 200:
            stats = response.json()
            print(f"‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats.get('total_posts', 0)} –ø–æ—Å—Ç–æ–≤")
            return True
        else:
            print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

if __name__ == "__main__":
    print("üéØ –ó–ê–ü–£–°–ö –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–Ø –¢–ï–°–¢–û–í–´–• –ü–û–°–¢–û–í")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    if check_api_status():
        # –ü–ª–∞–Ω–∏—Ä—É–µ–º –ø–æ—Å—Ç—ã
        schedule_test_posts()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        check_scheduled_posts()
        
        print("\nüí° –ü–æ—Å—Ç—ã –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã!")
        print("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—É–±–ª–∏–∫—É–µ—Ç –∏—Ö –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è")
        print("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8000")
    else:
        print("\nüí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("   python api.py")
    
    print("\n" + "="*60)
    print("‚úÖ –ü–õ–ê–ù–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("="*60) 