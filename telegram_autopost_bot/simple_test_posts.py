#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π –≤ Telegram
"""

import requests
import time
from datetime import datetime

def send_test_posts():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã –≤ –∫–∞–Ω–∞–ª—ã"""
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ API
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞...")
    time.sleep(3)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã
    channels = [
        {
            'chat_id': '-1002091962525',
            'name': 'digoGraphickDesign',
            'content': """üé® UX/UI –°–æ–≤–µ—Ç –¥–Ω—è

üî• –ì–ª–∞–≤–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø –¥–∏–∑–∞–π–Ω–∞: "–ú–µ–Ω—å—à–µ –∑–Ω–∞—á–∏—Ç –±–æ–ª—å—à–µ"

–ü–æ–º–Ω–∏—Ç–µ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –∑–∞ —Ä–µ—à–µ–Ω–∏–µ–º, –∞ –Ω–µ –∑–∞ –∫—Ä–∞—Å–∏–≤–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–æ–π. –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ü–µ–ª—å.

üí° –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç:
- –£–±–∏—Ä–∞–π—Ç–µ –ª–∏—à–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- –§–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–µ–ª–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ

üîñ –°–æ—Ö—Ä–∞–Ω—è–π –ø–æ—Å—Ç, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å!
üí¨ –î–µ–ª–∏—Å—å —Å–≤–æ–∏–º –º–Ω–µ–Ω–∏–µ–º –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö

#UXUITips #–î–∏–∑–∞–π–Ω #–û–±—É—á–µ–Ω–∏–µ #UXUI"""
        },
        {
            'chat_id': '-1002123538949',
            'name': 'digoUI',
            'content': """üìä –†–∞–∑–±–æ—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: E-commerce

üéØ –ó–∞–¥–∞—á–∞: –£–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–Ω–≤–µ—Ä—Å–∏—é –∫–æ—Ä–∑–∏–Ω—ã –Ω–∞ 25%

‚ùå –ü—Ä–æ–±–ª–µ–º—ã –≤ —Å—Ç–∞—Ä–æ–º –¥–∏–∑–∞–π–Ω–µ:
- –°–∫—Ä—ã—Ç–∞—è –∫–Ω–æ–ø–∫–∞ "–ö—É–ø–∏—Ç—å"
- –°–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
- –ù–µ–æ—á–µ–≤–∏–¥–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞

‚úÖ –†–µ—à–µ–Ω–∏–µ:
- –ö–Ω–æ–ø–∫–∞ "–ö—É–ø–∏—Ç—å" –Ω–∞ 40% –±–æ–ª—å—à–µ
- –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞
- –ü—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ

üìà –†–µ–∑—É–ª—å—Ç–∞—Ç: +32% –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∑–∞ 2 –Ω–µ–¥–µ–ª–∏

‚ùì –ö–∞–∫ –±—ã –≤—ã —Ä–µ—à–∏–ª–∏ —ç—Ç—É –∑–∞–¥–∞—á—É?
üëÜ –°—Ç–∞–≤—å –ª–∞–π–∫, –µ—Å–ª–∏ –ø–æ—Å—Ç –ø–æ–ª–µ–∑–µ–Ω!

#–ö–µ–π—Å #UXDesign #–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å #Ecommerce"""
        }
    ]
    
    print("üöÄ –û–¢–ü–†–ê–í–ö–ê –¢–ï–°–¢–û–í–´–• –ü–û–°–¢–û–í –í TELEGRAM")
    print("="*50)
    
    for channel in channels:
        print(f"\nüì¢ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∫–∞–Ω–∞–ª: {channel['name']}")
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç
            test_data = {
                "channel_id": channel['chat_id'],
                "content": channel['content']
            }
            
            response = requests.post("http://localhost:8000/api/test_post", json=test_data, timeout=10)
            
            if response.status_code == 200:
                print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ {channel['name']}")
                print(f"üìÑ –ö–æ–Ω—Ç–µ–Ω—Ç: {channel['content'][:50]}...")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code}")
                print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
                
        except requests.exceptions.ConnectionError:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API —Å–µ—Ä–≤–µ—Ä—É")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python api.py")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {channel['name']}: {e}")
        
        print("-" * 30)
        time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏

def check_api_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å API"""
    try:
        response = requests.get("http://localhost:8000/api/stats", timeout=5)
        if response.status_code == 200:
            stats = response.json()
            print(f"‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats.get('total_posts', 0)} –ø–æ—Å—Ç–æ–≤")
            return True
        else:
            print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

if __name__ == "__main__":
    print("üéØ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í–´–• –ü–£–ë–õ–ò–ö–ê–¶–ò–ô")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    if check_api_status():
        send_test_posts()
    else:
        print("\nüí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("   python api.py")
    
    print("\n" + "="*60)
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("="*60) 